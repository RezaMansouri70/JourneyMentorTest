// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(ProjectContext))]
    [Migration("20231117200219_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.DomainClass.Airport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("city_iata_code")
                        .HasColumnType("longtext");

                    b.Property<string>("country_iso2")
                        .HasColumnType("longtext");

                    b.Property<string>("country_name")
                        .HasColumnType("longtext");

                    b.Property<string>("geoname_id")
                        .HasColumnType("longtext");

                    b.Property<string>("gmt")
                        .HasColumnType("longtext");

                    b.Property<string>("iata_code")
                        .HasColumnType("longtext");

                    b.Property<string>("icao_code")
                        .HasColumnType("longtext");

                    b.Property<string>("phone_number")
                        .HasColumnType("longtext");

                    b.Property<string>("timezone")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Airports");
                });

            modelBuilder.Entity("Domain.DomainClass.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly>("flight_date")
                        .HasColumnType("date");

                    b.Property<string>("flight_status")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("Domain.DomainClass.Airport", b =>
                {
                    b.OwnsOne("Domain.ValueObjects.Name", "airport_name", b1 =>
                        {
                            b1.Property<int>("AirportId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("varchar(200)")
                                .HasColumnName("airport_name");

                            b1.HasKey("AirportId");

                            b1.ToTable("Airports");

                            b1.WithOwner()
                                .HasForeignKey("AirportId");
                        });

                    b.OwnsOne("Domain.ValueObjects.Latitude", "latitude", b1 =>
                        {
                            b1.Property<int>("AirportId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("latitude");

                            b1.HasKey("AirportId");

                            b1.ToTable("Airports");

                            b1.WithOwner()
                                .HasForeignKey("AirportId");
                        });

                    b.OwnsOne("Domain.ValueObjects.Longitude", "longitude", b1 =>
                        {
                            b1.Property<int>("AirportId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("longitude");

                            b1.HasKey("AirportId");

                            b1.ToTable("Airports");

                            b1.WithOwner()
                                .HasForeignKey("AirportId");
                        });

                    b.Navigation("airport_name");

                    b.Navigation("latitude");

                    b.Navigation("longitude");
                });

            modelBuilder.Entity("Domain.DomainClass.Flight", b =>
                {
                    b.OwnsOne("Domain.ValueObjects.Name", "airportname", b1 =>
                        {
                            b1.Property<int>("FlightId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("varchar(200)")
                                .HasColumnName("airportname");

                            b1.HasKey("FlightId");

                            b1.ToTable("Flights");

                            b1.WithOwner()
                                .HasForeignKey("FlightId");
                        });

                    b.Navigation("airportname");
                });
#pragma warning restore 612, 618
        }
    }
}
